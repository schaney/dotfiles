# -*- mode: sh;-*-
export PATH=$HOME/.local/bin:$HOME/.scripts:$HOME/local/bin:/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/local/bin:$PATH
export ADZERK_REPO_PATH=$HOME/dev/adzerk/adzerk
export EDITOR="TERM=xterm-24bits emacsclient -a \"\" -t"
export TERM=xterm-256color
export ITERM_24BIT=yes
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export MONO_PATH=/usr/lib/mono
export NODE_PATH=/usr/local/lib/node_modules
export KONSOLE_DBUS_SESSION=true
export HISTFILESIZE=100000000
export HISTSIZE=$HISTFILESIZE
export HISTCONTROL=ignoreboth
export HISTTIMEFORMAT='%F %T '
export PROMPT_COMMAND='history -a'
export QT_AUTO_SCREEN_SCALE_FACTOR=1
export ZERKENV_BUCKET=zerkenv
export ZERKENV_REGION=us-east-1
[ -d $HOME/dev/adzerk/cli-tools/scripts ] && export ADZERK_SCRIPTS_PATH=$HOME/dev/adzerk/cli-tools/scripts

source ~/.colors
source ~/.aliases

command_exists () {
  type "$1" &> /dev/null ;
}

command_exists zerkenv && source <(zerkenv -i bash)

aws-region ()
{
  [[ -n $1 ]] && export AWS_DEFAULT_REGION=$1;
  echo $AWS_DEFAULT_REGION
}

_aws-region() {
  local cur=${COMP_WORDS[COMP_CWORD]}
  local ses=$(cat <<EOT
ap-south-1
eu-west-2
eu-west-1
ap-northeast-2
ap-northeast-1
sa-east-1
ca-central-1
ap-southeast-1
ap-southeast-2
eu-central-1
us-east-1
us-east-2
us-west-1
us-west-2
EOT
        )
  COMPREPLY=( $(compgen -W "$ses" -- $cur) )
}
complete -F _aws-region aws-region

command_exists aws && complete -C $(which aws_completer) aws

# any local tweaks put in there
[[ -s "~/.tweaksrc" ]] && source ~/.tweaksrc

if [[ $ADZERK_SCRIPTS_PATH ]]; then
  PATH="$PATH:$ADZERK_SCRIPTS_PATH:$ADZERK_SCRIPTS_PATH/../micha"
  PATH="$PATH:$ADZERK_SCRIPTS_PATH:$ADZERK_SCRIPTS_PATH/../jarrod"
  PATH="$PATH:$ADZERK_SCRIPTS_PATH:$ADZERK_SCRIPTS_PATH/../sean"
fi

[ -d ~/.scripts ] && export PATH="$PATH:$HOME/.scripts"
[ -d /usr/local/go/bin ] && export PATH="$PATH:/usr/local/go/bin"
[ -d ~/.local/bin ] && export PATH="$PATH:/$HOME/.local/bin"
[ -f ~/.scripts/git-completion.bash ] && source ~/.scripts/git-completion.bash
[ -f ~/.scripts/git-prompt.sh ] && source ~/.scripts/git-prompt.sh

[ `uname` != "Darwin" ] && [ $DISPLAY ] && command_exists xset && xset m 0 0 &> /dev/null

PROMPT_COMMAND=__prompt_command # Func to gen PS1 after CMDs

__prompt_command() {
    local EXIT="$?"
    PS1=""
    # local sep="➤"
    # local sep=""
    local sep=""
    # local sep=""
    # local sep=""
    # local sep=""
    # local sep=""
    # local sep=""
    if [ $EXIT != 0 ]; then
        PS1+="${c_red}${sep} \h "
    else
        PS1+="${c_green}${sep} \h "
    fi

    local region=$(aws-region)
    if [[ $region ]]; then region="${c_purple}${sep} ${region} "; fi
    #[[ -n $ZERKENV_MODULES ]] && local ze="${c_orange}${sep} $(echo $ZERKENV_MODULES | sed 's/\@//g' | sed 's/ //g') "

    #ze="${c_orange}${sep} $(echo $ZERKENV_MODULES | wc -w) "

    if [[ -n $ZERKENV_MODULES ]]; then
      first3=$(echo $ZERKENV_MODULES | cut -f1-3 -d' ' | sed 's/\@//g' | sed 's/ //g')
      rest=$(echo $ZERKENV_MODULES | cut -f4- -d ' ' | wc -w)
      ze="${c_orange}${sep} $first3"
      [[ $rest -gt 0 ]] && ze+=" + $rest "
    else
      ze="o"
    fi

    PS1+="${region}${ze}${c_yellow}${sep} \w ${c_blue}\$(__git_ps1 '%s ')${c_orange}${c_magenta}${sep}${c_reset} "
}

zclear () {
  zerkload clear
  unset ZERKENV_MODULES
}

[ -f /Users/sean/.travis/travis.sh ] && source /Users/sean/.travis/travis.sh

hgrep () {
  history | grep "$@"
}

gc ()
{
  if [[ -z "$1" ]]; then
    gc $(tmux display-message -p '#S')
  else
    if grep -q "/" <(echo "$1"); then
      local FROM="git@github.com:${1?}"
      local TO="$HOME/dev/${1?}"
      if [[ ! -d "$TO" ]]; then
        git clone "$FROM" "$TO" > /dev/null 2>&1
        if [[ $? != 0 ]]; then
          TO="$(pwd)"
        fi
      fi
      cd "$TO"
    fi
  fi
}

sr ()
{
    eval $(tmux show-env |sed -n 's/^\(SSH_[^=]*\)=\(.*\)/export \1="\2"/p')
}

ee ()
{
    eval `sed 's/^/export /' $1`
}
[ `uname` != "Darwin" ] && complete -F _minimal ee

function .. { # "cd up" - move up $1 directories
  local num;
  local dest;
  num=${1:-1}
  while [[ $num > 0 ]]; do
    dest="../${dest}"
    (( num-- ))
  done
  cd "${dest}"
}

set -o emacs
bind 'set completion-ignore-case on'

# added by travis gem
[ -f /data/home/sean/.travis/travis.sh ] && source /data/home/sean/.travis/travis.sh

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

if [[ -z "$SSH_CLIENT" ]]; then
  ~/.scripts/welcome.sh
fi

if [[ $TMUX ]]; then
  gc
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
